<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classsrc_1_1_employees" kind="class" language="C#" prot="public">
    <compoundname>src::Employees</compoundname>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrc_1_1_employees_1a1938084a3f7f5bab6be468f4441f13aa" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int src.Employees.sizeArrays</definition>
        <argsstring></argsstring>
        <name>sizeArrays</name>
        <qualifiedname>src.Employees.sizeArrays</qualifiedname>
        <initializer>= 15</initializer>
        <briefdescription>
<para>The fixed size of the <computeroutput>employees</computeroutput> array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="33" column="19" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_employees_1a388e9f2a8779cb28521b9a5adc149c58" prot="private" static="yes" mutable="no">
        <type><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref>[]</type>
        <definition>Employee [] src.Employees.employees</definition>
        <argsstring></argsstring>
        <name>employees</name>
        <qualifiedname>src.Employees.employees</qualifiedname>
        <briefdescription>
<para>Array that stores instances of <computeroutput><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></computeroutput> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="38" column="25" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classsrc_1_1_employees_1a3f4dbf68c8294bab042118305006bac1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static src.Employees.Employees</definition>
        <argsstring>()</argsstring>
        <name>Employees</name>
        <qualifiedname>src.Employees.Employees</qualifiedname>
        <briefdescription>
<para>Initializes the <computeroutput><ref refid="classsrc_1_1_employees" kindref="compound">Employees</ref></computeroutput> class by setting up the client array. </para>
        </briefdescription>
        <detaileddescription>
<para>This static constructor is called only once, when the <computeroutput><ref refid="classsrc_1_1_employees" kindref="compound">Employees</ref></computeroutput> class is accessed for the first time. It initializes the <computeroutput>employees</computeroutput> array with a predefined size. </para>
<para>Accessing any member of the <computeroutput><ref refid="classsrc_1_1_employees" kindref="compound">Employees</ref></computeroutput> class will trigger this constructor if it hasn&apos;t been initialized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="59" column="16" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_employees_1a931d9e739d08ee1ae06b01fb369e0d0f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool src.Employees.VerifyEmployeeExistence</definition>
        <argsstring>(Employee employee)</argsstring>
        <name>VerifyEmployeeExistence</name>
        <qualifiedname>src.Employees.VerifyEmployeeExistence</qualifiedname>
        <param>
          <type><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></type>
          <declname>employee</declname>
        </param>
        <briefdescription>
<para>Checks if an employee with the same attributes already exists in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>employee</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></computeroutput> instance to verify.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para>This method uses the overridden <computeroutput>Equals</computeroutput> method of the <computeroutput><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></computeroutput> class to compare attributes. </para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if an employee with the same attributes exists; otherwise, <computeroutput>false</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="109" column="29" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="109" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrc_1_1_employees_1adc4c5e2e36aa527239b312cbf00a5b82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int src.Employees.AddEmployee</definition>
        <argsstring>(Employee employee)</argsstring>
        <name>AddEmployee</name>
        <qualifiedname>src.Employees.AddEmployee</qualifiedname>
        <param>
          <type><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></type>
          <declname>employee</declname>
        </param>
        <briefdescription>
<para>Adds an employee to the collection if they do not already exist (based on their attributes). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>employee</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></computeroutput> instance to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para>This method checks if an employee with the same attributes already exists before adding a new one. If the collection is full, it returns -10 as an error code. </para>
<para><simplesect kind="return"><para>The ID of the employee if added successfully; otherwise, returns -10 if the employee already exists or if there is no available space. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="81" column="27" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="81" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_employees_1a75746c33e90816b8bd00fa9537b59ca1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool src.Employees.VerifyEmployeeExistence</definition>
        <argsstring>(int idEmployee)</argsstring>
        <name>VerifyEmployeeExistence</name>
        <qualifiedname>src.Employees.VerifyEmployeeExistence</qualifiedname>
        <param>
          <type>int</type>
          <declname>idEmployee</declname>
        </param>
        <briefdescription>
<para>Checks if an employee with a specific ID exists in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idEmployee</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the employee to verify.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para>This method efficiently iterates through the employee array, stopping at the first&lt;c&gt;null entry. </para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if an employee with the specified ID exists; otherwise, <computeroutput>false</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="131" column="28" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="131" bodyend="147"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrc_1_1_employees_1aab626ae8cbf0c123cf9616aea084ee1f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>src.Employees.~Employees</definition>
        <argsstring>()</argsstring>
        <name>~Employees</name>
        <qualifiedname>src.Employees.~Employees</qualifiedname>
        <briefdescription>
<para>The destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="156" column="9" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="156" bodyend="158"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a collection of employee with a fixed maximum capacity. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is designed to store instances of the <computeroutput><ref refid="classsrc_1_1_employee" kindref="compound">Employee</ref></computeroutput> class in a fixed-size array, defined by the constant <computeroutput>sizeArrays</computeroutput>. The array is statically initialized upon first access to the <computeroutput><ref refid="classsrc_1_1_employees" kindref="compound">Employees</ref></computeroutput> class. </para>
<para>Example of use <programlisting filename=".cs"><codeline><highlight class="normal">Employees<sp/>employees<sp/></highlight></codeline>
<codeline><highlight class="normal">Employees.AddEmployee(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Employee<sp/>employee(</highlight><highlight class="stringliteral">&quot;Antonio<sp/>Pereira&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Eletricista&quot;</highlight><highlight class="normal">,<sp/>6.3))</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" line="27" column="11" bodyfile="C:/Users/hugoc/Desktop/2024_2025/Programação Orientada a Objetos/trabalhoPOO_23010_Fase1/src/Employees.cs" bodystart="28" bodyend="163"/>
    <listofallmembers>
      <member refid="classsrc_1_1_employees_1adc4c5e2e36aa527239b312cbf00a5b82" prot="public" virt="non-virtual"><scope>src::Employees</scope><name>AddEmployee</name></member>
      <member refid="classsrc_1_1_employees_1a3f4dbf68c8294bab042118305006bac1" prot="private" virt="non-virtual"><scope>src::Employees</scope><name>Employees</name></member>
      <member refid="classsrc_1_1_employees_1a388e9f2a8779cb28521b9a5adc149c58" prot="private" virt="non-virtual"><scope>src::Employees</scope><name>employees</name></member>
      <member refid="classsrc_1_1_employees_1a1938084a3f7f5bab6be468f4441f13aa" prot="private" virt="non-virtual"><scope>src::Employees</scope><name>sizeArrays</name></member>
      <member refid="classsrc_1_1_employees_1a931d9e739d08ee1ae06b01fb369e0d0f" prot="private" virt="non-virtual"><scope>src::Employees</scope><name>VerifyEmployeeExistence</name></member>
      <member refid="classsrc_1_1_employees_1a75746c33e90816b8bd00fa9537b59ca1" prot="public" virt="non-virtual"><scope>src::Employees</scope><name>VerifyEmployeeExistence</name></member>
      <member refid="classsrc_1_1_employees_1aab626ae8cbf0c123cf9616aea084ee1f" prot="private" virt="non-virtual"><scope>src::Employees</scope><name>~Employees</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
